
Process 类
创建进程：
1.p = Process(target=callable, name='', args='', kwargs='')
2.p.start() 启动进程

os.getpid()
os.getppid()

主进程：执行的时候，默认的进程称为主进程
子进程：在主进程可以开启子进程

全局变量：每个进程都会拥有一份全局变量。各自操作各自的全局变量
阻塞主进程：子进程.join()，阻塞主进程后面的代码

进程对象可以访问方法：
run()
start()
join()
terminate()  终止进程
close()  target完成后调用的close（）释放资源
is_alive()  判断target任务是否完成，如果任务完成则False,没有完成True（是否是活动的）

多进程适合在CPU 密集型操作（cpu 操作指令较多，如科学计算，位数较多的浮点数运算）

多线程适合在IO 密集型操作（读写数据操作较多的，如爬虫）

线程是并发，进程是并行；进程之间相互独立，是系统分配资源的最小单位，同一个进程中所有线程共享

进程：一个运行的程序或代码就是一个进程，一个没有运行的代码叫程序。进程是系统进行资源分配的最小单位，拥有自己的内存空间，所以进程间数据不共享，开销大。

线程：调度执行的最小单位，也叫执行路径，不能独立存在，以来进程的存在，一个进程至少有一个线程，叫主线程，多个线程共享内存（数据共享和全局变量），因此提升程序的运行效率

协程：用户态的轻量级线程，调度由用户控制，拥有自己的寄存器上下文和栈，切换基本没有内核切换的开销，切换灵活